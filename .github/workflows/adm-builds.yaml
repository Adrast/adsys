name: Update admx and adml templates
on:
  push:
    branches:
      - '**' # Ignore tag push, but take any branch
    paths:
      - 'internal/policies/ad/admxgen/**'
      - '.github/workflows/adm-builds.yaml'
  schedule:
    - cron: '42 0 * * *'

env:
  goversion: '1.16'

jobs:
  build-admxgen:
    name: Build admxgen static binary
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: ${{ env.goversion }}
      - run: |
          mkdir /tmp/adsys
          CO_ENABLED=0 go build ./internal/policies/ad/admxgen/
      - name: Upload admxgen
        uses: actions/upload-artifact@v2
        with:
          name: admxgen
          path: |
            admxgen
            ./internal/policies/ad/admxgen/defs/*
          if-no-files-found: error

  collect-releases:
    name: Collect supported keys on each releases
    runs-on: ubuntu-latest
    needs: build-admxgen
    strategy:
      matrix:
        releases: ['ubuntu:devel', 'ubuntu:rolling', 'ubuntu:latest']
    container:
      image: ${{ matrix.releases }}
    steps:
      - name: Download admxgen and definition files
        uses: actions/download-artifact@v2
        with:
          name: admxgen
      - name: Install desktop with all default package in container
        run: |
          DEBIAN_FRONTEND=noninteractive apt update
          DEBIAN_FRONTEND=noninteractive apt -y install ubuntu-desktop
      - name: Collect support keys
        run: |
          chmod 755 ./admxgen
          ./admxgen -current-session ubuntu expand ./internal/policies/ad/admxgen/defs/ ./out/
      - name: Prepare artefact name variable
        shell: bash
        run: |
          artifacts_name=${{ matrix.releases }}
          artifacts_name=${artifacts_name/:/-}
          echo "artifacts_name=${artifacts_name}" >> $GITHUB_ENV
      - name: Generated definition files
        uses: actions/upload-artifact@v2
        with:
          name: policies-${{ env.artifacts_name }}
          path: out/*
          if-no-files-found: error

  generate-ad:
    name: Merge keys to generated admx/adml
    runs-on: ubuntu-latest
    needs: collect-releases
    strategy:
      matrix:
        releases: ['LTS', 'ALL']
    steps:
      - name: Install needed binaries
        run: |
          sudo apt update
          sudo DEBIAN_FRONTEND=noninteractive apt install -y distro-info
      - name: Download all available artifacts
        uses: actions/download-artifact@v2
        with:
          path: artifacts
      - name: Display structure of downloaded files
        run: |
          set -x
          target=$(ubuntu-distro-info -r --supported | grep -w LTS | cut -d" " -f1)
          if [ ${{ matrix.releases }} = "ALL" ]; then
            target=$(ubuntu-distro-info -r --supported | cut -d" " -f1)
          fi

          mkdir wanted/
          for f in $(find artifacts/policies-*/ -type f); do
            for wanted in ${target}; do
              if [ $(basename $f) != ${wanted}.yaml ]; then
                continue
              fi
              cp $f wanted/
            done
          done
          chmod +x artifacts/admxgen/admxgen
          artifacts/admxgen/admxgen -auto-detect-releases admx artifacts/admxgen/internal/policies/ad/admxgen/defs/categories.yaml wanted/ .
          ls -R
      - name: Upload adm template files
        uses: actions/upload-artifact@v2
        with:
          name: adm-${{ matrix.releases }}
          path: Ubuntu.adm*
          if-no-files-found: error

  integrate-ad:
    name: Integrate AD in current git tree
    runs-on: ubuntu-latest
    needs: generate-ad
    steps:
      - name: Install dependencies, including git for checkout
        run: |
          sudo apt update
          sudo DEBIAN_FRONTEND=noninteractive apt install -y git
      # Checkout code with git
      - uses: actions/checkout@v2
      - name: Download adm template files for "all"
        uses: actions/download-artifact@v2
        with:
          name: adm-ALL
          path: internal/policies/ad/definitions/policy/Ubuntu/all
      - name: Download adm template files for lts only
        uses: actions/download-artifact@v2
        with:
          name: adm-LTS
          path: internal/policies/ad/definitions/policy/Ubuntu/lts-only
      - name: Copy admx and adml to git
        run: |
          git add internal/policies/ad/definitions/
      - name: Get output branch for branch name
        id: get-branch-name
        shell: bash
        run: echo "::set-output name=branch::${GITHUB_REF#refs/heads/}"
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v3
        with:
          commit-message: Refresh policy definition files
          title: Refresh policy definition files
          labels: policies, automated pr
          body: "[Auto-generated pull request](https://github.com/ubuntu/adsys/actions?query=workflow%3A%22Update+translation+and+readme+in+main+branch+automatically%22) by GitHub Action"
          branch: auto-update-policydefinitions-${{ steps.get-branch-name.outputs.branch }}
          token: ${{ secrets.GITHUB_TOKEN }}
          delete-branch: true
